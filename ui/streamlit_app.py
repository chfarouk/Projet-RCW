# ui/streamlit_app.py
import streamlit as st
import os
import requests
from dotenv import load_dotenv

# Charger les variables d'environnement (URLs des API)
load_dotenv()
USER_API = os.getenv("USER_SERVICE_API_URL")
DOC_API = os.getenv("DOCUMENT_SERVICE_API_URL")
LOAN_API = os.getenv("LOAN_SERVICE_API_URL")

# --- Configuration de la Page Streamlit ---
st.set_page_config(
    page_title="BiblioTeccart",
    page_icon="üìö", # Ou un emoji/lien vers favicon
    layout="wide", # Utiliser toute la largeur
    initial_sidebar_state="collapsed" # Afficher la barre lat√©rale par d√©faut
)

# --- Initialisation ROBUSTE de l'√âtat de Session ---
# V√©rifier chaque cl√© n√©cessaire individuellement
if 'logged_in' not in st.session_state:
    st.session_state['logged_in'] = False
if 'user_info' not in st.session_state:
    st.session_state['user_info'] = None
if 'error_message' not in st.session_state:
    st.session_state['error_message'] = None
if 'success_message' not in st.session_state:
    st.session_state['success_message'] = None
# --- FIN Initialisation Robuste ---


# --- Affichage des Messages Flash (Simul√©) ---
# Maintenant, on peut v√©rifier la valeur en toute s√©curit√©
if st.session_state['error_message']:
    st.error(st.session_state['error_message'])
    st.session_state['error_message'] = None # Effacer apr√®s affichage
if st.session_state['success_message']:
    st.success(st.session_state['success_message'])
    st.session_state['success_message'] = None # Effacer apr√®s affichage

# --- Contenu de la Page d'Accueil (streamlit_app.py) ---
st.title("üìö Bienvenue sur BiblioTeccart !")

st.markdown("""
Votre plateforme de gestion de biblioth√®que intelligente.

*   Utilisez la barre lat√©rale √† gauche pour naviguer entre les sections.
*   Connectez-vous pour acc√©der au catalogue et √† votre tableau de bord.
""")

# Afficher des infos diff√©rentes si connect√© ou non
if st.session_state['logged_in'] and st.session_state['user_info']:
     st.sidebar.success(f"Connect√© en tant que : {st.session_state['user_info'].get('username', '')} ({st.session_state['user_info'].get('role', '')})")
     # Ajouter un bouton de d√©connexion dans la barre lat√©rale
     if st.sidebar.button("D√©connexion"):
         # Effacer les informations de session
         st.session_state['logged_in'] = False
         st.session_state['user_info'] = None
         st.session_state['success_message'] = "Vous avez √©t√© d√©connect√©."
         st.rerun() # Forcer le rechargement de la page pour refl√©ter la d√©connexion
else:
    st.sidebar.info("Vous n'√™tes pas connect√©.")
    st.markdown("Veuillez vous connecter ou vous inscrire via la page 'Login / Inscription'.")


st.subheader("√Ä propos")
st.write("Ce projet vise √† cr√©er une interface moderne pour une biblioth√®que, en utilisant une architecture microservices avec FastAPI pour le backend et Streamlit pour cette interface utilisateur.")

# On pourrait afficher ici des nouveaut√©s ou stats publiques si on avait une API pour √ßa

# --- Pied de page simple ---
st.markdown("---")
st.caption("¬© BiblioTeccart")